/* 
 * Tripartie Web API
 *
 * This document describes all use cases offered by the Tripartie Web API.<br /><br /> The Tripartie Web API allows you to easily create Transaction templates.<br /> A Transaction template allows a User (the Buyer) to safely initiate a Transaction pre-configured by another User (the Seller).<br /> This allows you to add a Secured Payment button on your website pages.<br /><br /> To facilitate working with the Web API, we built libraries for common development environment:<br/> <ul class=\"bullet\">   <li><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://github.com/tripartie/webapi-jsclient\">Javascript</a></li> </ul> <br/> You're reading the documentation for version 1.0 of the Web API.<br/> Go to version <select id=\"version-switcher\"></select> 
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@tripartie.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using NUnit.Framework;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using TripartieWebAPI.CSharpClient.Api;
using TripartieWebAPI.CSharpClient.Model;
using TripartieWebAPI.CSharpClient.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace TripartieWebAPI.CSharpClient.Test
{
    /// <summary>
    ///  Class for testing Webhook
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class WebhookTests
    {
        // TODO uncomment below to declare an instance variable for Webhook
        //private Webhook instance;

        /// <summary>
        /// Setup before each test
        /// </summary>
        [SetUp]
        public void Init()
        {
            // TODO uncomment below to create an instance of Webhook
            //instance = new Webhook();
        }

        /// <summary>
        /// Clean up after each test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of Webhook
        /// </summary>
        [Test]
        public void WebhookInstanceTest()
        {
            // TODO uncomment below to test "IsInstanceOf" Webhook
            //Assert.IsInstanceOf(typeof(Webhook), instance);
        }


        /// <summary>
        /// Test the property 'Uuid'
        /// </summary>
        [Test]
        public void UuidTest()
        {
            // TODO unit test for the property 'Uuid'
        }
        /// <summary>
        /// Test the property 'EventType'
        /// </summary>
        [Test]
        public void EventTypeTest()
        {
            // TODO unit test for the property 'EventType'
        }
        /// <summary>
        /// Test the property 'TransactionTemplateExternalId'
        /// </summary>
        [Test]
        public void TransactionTemplateExternalIdTest()
        {
            // TODO unit test for the property 'TransactionTemplateExternalId'
        }
        /// <summary>
        /// Test the property 'TransactionTemplateTripartieId'
        /// </summary>
        [Test]
        public void TransactionTemplateTripartieIdTest()
        {
            // TODO unit test for the property 'TransactionTemplateTripartieId'
        }
        /// <summary>
        /// Test the property 'BuyerExternalId'
        /// </summary>
        [Test]
        public void BuyerExternalIdTest()
        {
            // TODO unit test for the property 'BuyerExternalId'
        }
        /// <summary>
        /// Test the property 'BuyerTripartieId'
        /// </summary>
        [Test]
        public void BuyerTripartieIdTest()
        {
            // TODO unit test for the property 'BuyerTripartieId'
        }
        /// <summary>
        /// Test the property 'EventTimestamp'
        /// </summary>
        [Test]
        public void EventTimestampTest()
        {
            // TODO unit test for the property 'EventTimestamp'
        }

    }

}
